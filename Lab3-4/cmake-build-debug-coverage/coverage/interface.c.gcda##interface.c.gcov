        -:    0:Source:D:/Programming n shit/UBB/Anul 1/OOP/Lab3-4/Interface/interface.c
        -:    0:Graph:D:\Programming n shit\UBB\Anul 1\OOP\Lab3-4\cmake-build-debug-coverage\CMakeFiles\Lab3_4.dir\Interface\interface.c.gcno
        -:    0:Data:D:\Programming n shit\UBB\Anul 1\OOP\Lab3-4\cmake-build-debug-coverage\CMakeFiles\Lab3_4.dir\Interface\interface.c.gcda
        -:    0:Runs:1
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <string.h>
        -:    4:#include "interface.h"
        -:    5:
        -:    6:struct interface{
        -:    7:    service* srv;
        -:    8:};
        -:    9:
function interface_initialization called 1 returned 100% blocks executed 100%
        1:   10:interface* interface_initialization(service* srv){
        -:   11:    //functie de initializare a obiectului de interfata
        1:   12:    interface* ui = malloc(sizeof(interface));
        1:   13:    ui->srv = srv;
        1:   14:    return ui;
        1:   14-block  0
        -:   15:}
        -:   16:
function interface_destructor called 1 returned 100% blocks executed 100%
        1:   17:void interface_destructor(interface* ui){
        -:   18:    //strica obicectul de interfata
        1:   19:    free(ui);
        1:   20:}
        -:   21:
        -:   22:char command_sep[] = " ";
        -:   23:
function interface_delete called 0 returned 0% blocks executed 0%
    #####:   24:void interface_delete(service* srv){
        -:   25:    //functie de stergere a unui obiect
        -:   26:    char *id;
    #####:   27:    id = strtok(NULL, command_sep);
    %%%%%:   27-block  0
call    0 never executed
        -:   28:
    #####:   29:    if(id == NULL){
branch  0 never executed
branch  1 never executed
    #####:   30:        printf("Too few arguments were given\n");
    %%%%%:   30-block  0
call    0 never executed
        -:   31:    }
    #####:   32:    else if(strtok(NULL, command_sep) != NULL){
    %%%%%:   32-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   33:        printf("Too many arguments were give\n");
    %%%%%:   33-block  0
call    0 never executed
        -:   34:    }
        -:   35:    else{
    #####:   36:        int p = service_delete(srv, id);
    %%%%%:   36-block  0
call    0 never executed
    #####:   37:        if(p == 1){
branch  0 never executed
branch  1 never executed
    #####:   38:            printf("Delete was successful\n");
    %%%%%:   38-block  0
call    0 never executed
        -:   39:        }
    #####:   40:        else if(p == 2){
    %%%%%:   40-block  0
branch  0 never executed
branch  1 never executed
    #####:   41:            printf("No participant with given id was found\n");
    %%%%%:   41-block  0
call    0 never executed
        -:   42:        }
        -:   43:        else{
    #####:   44:            printf("One or more arguments were incorrect\n");
    %%%%%:   44-block  0
call    0 never executed
        -:   45:        }
        -:   46:    }
        -:   47:
    #####:   48:}
        -:   49:
function interface_modify called 0 returned 0% blocks executed 0%
    #####:   50:void interface_modify(service* srv){
        -:   51:    //noo i doent wanna write no more
        -:   52:    char *id, *nume, *prenume, *scor;
    #####:   53:    id = strtok(NULL, command_sep);
    %%%%%:   53-block  0
call    0 never executed
    #####:   54:    nume = strtok(NULL, command_sep);
call    0 never executed
    #####:   55:    prenume = strtok(NULL, command_sep);
call    0 never executed
    #####:   56:    scor = strtok(NULL, command_sep);
call    0 never executed
        -:   57:
    #####:   58:    if(id == NULL || nume == NULL || prenume == NULL || scor == NULL){
branch  0 never executed
branch  1 never executed
    %%%%%:   58-block  0
branch  2 never executed
branch  3 never executed
    %%%%%:   58-block  1
branch  4 never executed
branch  5 never executed
    %%%%%:   58-block  2
branch  6 never executed
branch  7 never executed
    #####:   59:        printf("Too few arguments were given\n");
    %%%%%:   59-block  0
call    0 never executed
        -:   60:    }
    #####:   61:    else if(strtok(NULL, command_sep) != NULL){
    %%%%%:   61-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   62:        printf("Too many arguments were give\n");
    %%%%%:   62-block  0
call    0 never executed
        -:   63:    }
        -:   64:    else{
    #####:   65:        int p = service_modify(srv, id, nume, prenume, scor);
    %%%%%:   65-block  0
call    0 never executed
    #####:   66:        if(p == 1){
branch  0 never executed
branch  1 never executed
    #####:   67:            printf("Modify was successful\n");
    %%%%%:   67-block  0
call    0 never executed
        -:   68:        }
    #####:   69:        else if(p == 2){
    %%%%%:   69-block  0
branch  0 never executed
branch  1 never executed
    #####:   70:            printf("No participant with given id was found\n");
    %%%%%:   70-block  0
call    0 never executed
        -:   71:        }
        -:   72:        else{
    #####:   73:        printf("One or more arguments were incorrect\n");
    %%%%%:   73-block  0
call    0 never executed
        -:   74:        }
        -:   75:    }
    #####:   76:}
        -:   77:
function interface_filter called 0 returned 0% blocks executed 0%
    #####:   78:void interface_filter(service* srv){
        -:   79:    char *scor;
    #####:   80:    scor = strtok(NULL, command_sep);
    %%%%%:   80-block  0
call    0 never executed
    #####:   81:    if(scor == NULL){
branch  0 never executed
branch  1 never executed
    #####:   82:        printf("Too few arguments were given\n");
    %%%%%:   82-block  0
call    0 never executed
        -:   83:    }
    #####:   84:    else if(strtok(NULL, command_sep) != NULL){
    %%%%%:   84-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   85:        printf("Too many arguments were give\n");
    %%%%%:   85-block  0
call    0 never executed
        -:   86:    }
        -:   87:    else{
    #####:   88:        char* out = service_show(srv, scor);
    %%%%%:   88-block  0
call    0 never executed
    #####:   89:        if(out == NULL)
branch  0 never executed
branch  1 never executed
    #####:   90:            printf("One or more arguments were incorrect\n");
    %%%%%:   90-block  0
call    0 never executed
    #####:   91:        else if(strlen(out) == 0)
    %%%%%:   91-block  0
branch  0 never executed
branch  1 never executed
    #####:   92:            printf("No students were found\n");
    %%%%%:   92-block  0
call    0 never executed
        -:   93:        else{
    #####:   94:            printf("%s", out);
    %%%%%:   94-block  0
call    0 never executed
    #####:   95:            free(out);
        -:   96:        }
        -:   97:    }
    #####:   98:}
        -:   99:
function interface_add called 0 returned 0% blocks executed 0%
    #####:  100:void interface_add(service* srv){
        -:  101:    char *nume, *prenume, *scor;
    #####:  102:    nume = strtok(NULL, command_sep);
    %%%%%:  102-block  0
call    0 never executed
    #####:  103:    prenume = strtok(NULL, command_sep);
call    0 never executed
    #####:  104:    scor = strtok(NULL, command_sep);
call    0 never executed
        -:  105:
    #####:  106:    if(nume == NULL || prenume == NULL || scor == NULL){
branch  0 never executed
branch  1 never executed
    %%%%%:  106-block  0
branch  2 never executed
branch  3 never executed
    %%%%%:  106-block  1
branch  4 never executed
branch  5 never executed
    #####:  107:        printf("Too few arguments were given\n");
    %%%%%:  107-block  0
call    0 never executed
        -:  108:    }
    #####:  109:    else if(strtok(NULL, command_sep) != NULL){
    %%%%%:  109-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  110:        printf("Too many arguments were give\n");
    %%%%%:  110-block  0
call    0 never executed
        -:  111:    }
    #####:  112:    else if(service_add(srv, nume, prenume, scor)){
    %%%%%:  112-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  113:        printf("Add was successful\n");
    %%%%%:  113-block  0
call    0 never executed
        -:  114:    }
        -:  115:    else{
    #####:  116:        printf("One or more arguments were incorrect\n");
    %%%%%:  116-block  0
call    0 never executed
        -:  117:    }
    #####:  118:}
        -:  119:
function interface_debug called 0 returned 0% blocks executed 0%
    #####:  120:void interface_debug(service* srv){
        -:  121:    char *string;
    #####:  122:    string = service_debug(srv);
    %%%%%:  122-block  0
call    0 never executed
    #####:  123:    printf("%s", string);
call    0 never executed
    #####:  124:    free(string);
    #####:  125:}
        -:  126:
function interface_sort called 0 returned 0% blocks executed 0%
    #####:  127:void interface_sort(service* srv){
        -:  128:    char *key, *order ;
    #####:  129:    key = strtok(NULL, command_sep);
    %%%%%:  129-block  0
call    0 never executed
    #####:  130:    order = strtok(NULL, command_sep);
call    0 never executed
        -:  131:
    #####:  132:    if(key == NULL || order == NULL){
branch  0 never executed
branch  1 never executed
    %%%%%:  132-block  0
branch  2 never executed
branch  3 never executed
    #####:  133:        printf("Too few arguments were given\n");
    %%%%%:  133-block  0
call    0 never executed
        -:  134:    }
    #####:  135:    else if(strtok(NULL, command_sep) != NULL){
    %%%%%:  135-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  136:        printf("Too many arguments were give\n");
    %%%%%:  136-block  0
call    0 never executed
        -:  137:    }
    #####:  138:    else if(service_sort(srv, key, order)){
    %%%%%:  138-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  139:        printf("Sort was successful\n");
    %%%%%:  139-block  0
call    0 never executed
        -:  140:    }
        -:  141:    else{
    #####:  142:        printf("One or more arguments were incorrect\n");
    %%%%%:  142-block  0
call    0 never executed
        -:  143:    }
    #####:  144:}
        -:  145:
function get_command called 1 returned 100% blocks executed 30%
        1:  146:short int get_command(interface* ui){
        1:  147:    char *input = (char *)malloc(500);
        1:  148:    printf("Command:");
        1:  148-block  0
call    0 returned 1
        1:  149:    gets(input);
call    0 returned 1
        1:  150:    char *command = strtok(input, command_sep);
call    0 returned 1
        1:  151:    if(!strcmp(command, "exit")){
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:  152:        return 0;
        1:  152-block  0
        -:  153:    }
    #####:  154:    else if(!strcmp(command, "add")){
    %%%%%:  154-block  0
branch  0 never executed
branch  1 never executed
    #####:  155:        interface_add(ui->srv);
    %%%%%:  155-block  0
call    0 never executed
        -:  156:    }
    #####:  157:    else if(!strcmp(command, "modify")){
    %%%%%:  157-block  0
branch  0 never executed
branch  1 never executed
    #####:  158:        interface_modify(ui->srv);
    %%%%%:  158-block  0
call    0 never executed
        -:  159:    }
    #####:  160:    else if(!strcmp(command, "debug")){
    %%%%%:  160-block  0
branch  0 never executed
branch  1 never executed
    #####:  161:        interface_debug(ui->srv);
    %%%%%:  161-block  0
call    0 never executed
        -:  162:    }
    #####:  163:    else if(!strcmp(command, "delete")){
    %%%%%:  163-block  0
branch  0 never executed
branch  1 never executed
    #####:  164:        interface_delete(ui->srv);
    %%%%%:  164-block  0
call    0 never executed
        -:  165:    }
    #####:  166:    else if(!strcmp(command, "filter")){
    %%%%%:  166-block  0
branch  0 never executed
branch  1 never executed
    #####:  167:        interface_filter(ui->srv);
    %%%%%:  167-block  0
call    0 never executed
        -:  168:    }
    #####:  169:    else if(!strcmp(command, "sort")){
    %%%%%:  169-block  0
branch  0 never executed
branch  1 never executed
    #####:  170:        interface_sort(ui->srv);
    %%%%%:  170-block  0
call    0 never executed
        -:  171:    }
        -:  172:    else
    #####:  173:        printf("Command doesn't exist\n");
    %%%%%:  173-block  0
call    0 never executed
    #####:  174:    free(command);
    #####:  175:    return 1;
    %%%%%:  175-block  0
        -:  176:}
        -:  177:
function interface_run called 1 returned 100% blocks executed 100%
        1:  178:void interface_run(interface* ui){
        1:  179:    short int Run = 1;
        2:  180:    while(Run){
        1:  180-block  0
        2:  180-block  1
branch  0 taken 1
branch  1 taken 1 (fallthrough)
        1:  181:        Run = get_command(ui);
        1:  181-block  0
call    0 returned 1
        -:  182:    }
        1:  183:}
        -:  184:
        -:  185:
