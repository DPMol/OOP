        -:    0:Source:D:/Programming n shit/UBB/Anul 1/OOP/Lab6-7/Domain/tenant.h
        -:    0:Graph:D:\Programming n shit\UBB\Anul 1\OOP\Lab6-7\cmake-build-debug-coverage\CMakeFiles\Lab6_7.dir\main.cpp.gcno
        -:    0:Data:D:\Programming n shit\UBB\Anul 1\OOP\Lab6-7\cmake-build-debug-coverage\CMakeFiles\Lab6_7.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1:#pragma once
        -:    2:#include <string>
        -:    3:#include <iostream>
        -:    4:
        -:    5:class tenant{
        -:    6:private:
        -:    7:    int apartment;
        -:    8:    std::string owner;
        -:    9:    std::string type;
        -:   10:    int area;
        -:   11:
        -:   12:public:
        -:   13:    /**
        -:   14:     * Creates a tenant object with given parameters.
        -:   15:     * @param apartment Apartment number
        -:   16:     * @param owner Apartment owner
        -:   17:     * @param type Apartment type
        -:   18:     * @param area Apartment area
        -:   19:     */
        -:   20:    tenant(int apartment, std::string owner, std::string type, int area);
        -:   21:
        -:   22:    tenant(const tenant& other);
        -:   23:
        -:   24:    /**
        -:   25:     * Default destructor.
        -:   26:     */
function _ZN6tenantD1Ev called 14 returned 100% blocks executed 100%
       14:   27:    ~tenant()= default;
       14:   27-block  0
call    0 returned 14
call    1 returned 14
        -:   28:
        -:   29:    /**
        -:   30:     * Returns apartment number.
        -:   31:     * @return Apartment
        -:   32:     */
        -:   33:    int get_apartment() const;
        -:   34:
        -:   35:    /**
        -:   36:     * Returns apartment owner.
        -:   37:     * @return Owner
        -:   38:     */
        -:   39:    std::string get_owner();
        -:   40:
        -:   41:    /**
        -:   42:     * Returns apartment type.
        -:   43:     * @return Type
        -:   44:     */
        -:   45:    std::string get_type();
        -:   46:
        -:   47:    /**
        -:   48:     * Returns apartment area.
        -:   49:     * @return Area
        -:   50:     */
        -:   51:    int get_area() const;
        -:   52:
        -:   53:    /**
        -:   54:     * Changes aparment value to given parameter.
        -:   55:     * @param new_aparment Apartment
        -:   56:     */
        -:   57:    void set_apartment(int new_apartment);
        -:   58:
        -:   59:    /**
        -:   60:     * Changes owner value to given parameter.
        -:   61:     * @param new_owner Owner
        -:   62:     */
        -:   63:    void set_owner(const std::string& new_owner);
        -:   64:
        -:   65:    /**
        -:   66:     * Changes type value to given parameter.
        -:   67:     * @param new_type Type
        -:   68:     */
        -:   69:    void set_type(const std::string& new_type);
        -:   70:
        -:   71:    /**
        -:   72:     * Changes area value to given parameter.
        -:   73:     * @param new_area Area
        -:   74:     */
        -:   75:    void set_area(int new_area);
        -:   76:
        -:   77:    bool operator!= (const tenant& other) const;
        -:   78:
        -:   79:    bool operator == (const tenant& other) const;
        -:   80:
        -:   81:    std::string str();
        -:   82:};
        -:   83:
