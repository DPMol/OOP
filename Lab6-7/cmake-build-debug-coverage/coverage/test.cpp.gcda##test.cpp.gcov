        -:    0:Source:D:/Programming n shit/UBB/Anul 1/OOP/Lab6-7/test/test.cpp
        -:    0:Graph:D:\Programming n shit\UBB\Anul 1\OOP\Lab6-7\cmake-build-debug-coverage\CMakeFiles\Lab6_7.dir\test\test.cpp.gcno
        -:    0:Data:D:\Programming n shit\UBB\Anul 1\OOP\Lab6-7\cmake-build-debug-coverage\CMakeFiles\Lab6_7.dir\test\test.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "test.h"
        -:    2:
function _ZN4test3runEv called 1 returned 100% blocks executed 100%
        1:    3:void test::run() {
        1:    4:    domain_test();
        1:    4-block  0
call    0 returned 1
        1:    5:    service_test();
call    0 returned 1
        1:    6:    repository_test();
call    0 returned 1
        1:    7:}
        -:    8:
function _ZN4test11domain_testEv called 1 returned 100% blocks executed 51%
        1:    9:void test::domain_test() {
        2:   10:    tenant t(1, "Alin", "big", 1);
        1:   10-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   10-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   10-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 1
call   12 returned 1
call   13 returned 1
    $$$$$:   10-block  3
    $$$$$:   10-block  4
    $$$$$:   10-block  5
    $$$$$:   10-block  6
       1*:   11:    assert(t.get_apartment() == 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   11-block  0
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   11-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   11-block  2
    %%%%%:   11-block  3
       1*:   12:    assert(t.get_area() == 1);
        1:   12-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   12-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   12-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   12-block  3
    %%%%%:   12-block  4
       1*:   13:    assert(t.get_owner() == "Alin");
        1:   13-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   13-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   13-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   13-block  3
    %%%%%:   13-block  4
        1:   13-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   13-block  6
call   11 returned 1
    $$$$$:   13-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   13-block  8
call   14 never executed
    $$$$$:   13-block  9
       1*:   14:    assert(t.get_type() == "big");
        1:   14-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   14-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   14-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   14-block  3
    %%%%%:   14-block  4
        1:   14-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   14-block  6
call   11 returned 1
    $$$$$:   14-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   14-block  8
call   14 never executed
    $$$$$:   14-block  9
        -:   15:
        1:   16:    t.set_type("Bomba");
        1:   16-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   16-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   16-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:   16-block  3
call    9 never executed
    $$$$$:   16-block  4
    $$$$$:   16-block  5
call   10 never executed
    $$$$$:   16-block  6
        -:   17:
        1:   18:    t.set_owner("Bomba");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   18-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   18-block  1
call    7 returned 1
call    8 returned 1
    $$$$$:   18-block  2
call    9 never executed
    $$$$$:   18-block  3
    $$$$$:   18-block  4
call   10 never executed
    $$$$$:   18-block  5
        -:   19:
        1:   20:    t.set_apartment(1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   21:
        1:   22:    t.set_area(321);
        1:   22-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   23:
        1:   24:    auto str = t.str();
        1:   24-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   25:
       1*:   26:    assert(t == t);
        1:   26-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   26-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   26-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   26-block  3
    %%%%%:   26-block  4
        -:   27:
       1*:   28:    assert((t != t) == 0);
        1:   28-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   28-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   28-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   28-block  3
    %%%%%:   28-block  4
        -:   29:
        1:   30:}
        1:   30-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   30-block  1
call    2 never executed
    $$$$$:   30-block  2
call    3 never executed
        -:   31:
function _ZN4test12service_testEv called 1 returned 100% blocks executed 67%
        1:   32:void test::service_test() {
        1:   33:    repository repo;
        1:   33-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   34:    service srv(repo);
        1:   34-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        2:   35:    std::string name = "alin", type = "big";
        1:   35-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
    $$$$$:   35-block  1
    $$$$$:   35-block  2
        1:   36:    srv.add(1, name, type, 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   37:
        -:   38:    try{
        1:   39:        srv.add(1, name, type, 1);
        1:   39-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    #####:   40:        assert(false);
    %%%%%:   40-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   41:    }
        1:   42:    catch(...){
        1:   42-block  0
        1:   42-block  1
call    0 returned 1
        1:   43:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   44:
        1:   45:    srv.modify(1, name, type, 1, 10, name, type, 1);
        1:   45-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   46:
        -:   47:    try{
        1:   48:        srv.modify(1, name, type, 1, 10, name, type, 1);
        1:   48-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    #####:   49:        assert(false);
    %%%%%:   49-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   50:    }
        1:   51:    catch(...){
        1:   51-block  0
        1:   51-block  1
call    0 returned 1
        1:   52:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   53:
        1:   54:    std::string s;
        1:   54-block  0
call    0 returned 1
        -:   55:
        1:   56:    s = srv.show();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   56-block  0
call    3 returned 1
call    4 returned 1
        1:   57:    s.clear();
call    0 returned 1
        -:   58:
        1:   59:    s = srv.find(10);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   59-block  0
call    3 returned 1
call    4 returned 1
        1:   60:    s.clear();
call    0 returned 1
        -:   61:
        1:   62:    srv.del( 10, name, type, 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   63:
        -:   64:    try{
        1:   65:        srv.del( 10, name, type, 1);
        1:   65-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    #####:   66:        assert(false);
    %%%%%:   66-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   67:    }
        1:   68:    catch(...){
        1:   68-block  0
        1:   68-block  1
call    0 returned 1
        1:   69:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   70:}
        1:   70-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
    $$$$$:   70-block  1
call    5 never executed
    $$$$$:   70-block  2
call    6 never executed
    $$$$$:   70-block  3
call    7 never executed
    $$$$$:   70-block  4
call    8 never executed
    $$$$$:   70-block  5
call    9 never executed
        -:   71:
function _ZN4test15repository_testEv called 1 returned 100% blocks executed 55%
        1:   72:void test::repository_test() {
        2:   73:    tenant t(1, "Alin", "big", 1);
        1:   73-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   73-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   73-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 1
call   12 returned 1
call   13 returned 1
    $$$$$:   73-block  3
    $$$$$:   73-block  4
    $$$$$:   73-block  5
    $$$$$:   73-block  6
        1:   74:    repository repo;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   75:
        1:   76:    repo.add(t);
        1:   76-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   77:
        1:   78:    auto i = repo.find(t);
        1:   78-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   79:
       1*:   80:    assert(i == 0);
        1:   80-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   80-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
        1:   80-block  2
    %%%%%:   80-block  3
        -:   81:
        1:   82:    auto l = repo.get_list();
        1:   82-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   82-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        -:   83:
        -:   84:
        1:   85:    l=l;
        1:   85-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   86:    assert(l == l);
        1:   86-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   86-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   86-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   86-block  3
    %%%%%:   86-block  4
        -:   87:
        1:   88:    auto p = repo.get_position(0);
        1:   88-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   89:
       1*:   90:    assert(*p == t);
        1:   90-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   90-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   90-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   90-block  3
    %%%%%:   90-block  4
        1:   91:}
        1:   91-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   91-block  1
call    3 never executed
    $$$$$:   91-block  2
call    4 never executed
    $$$$$:   91-block  3
call    5 never executed
